{"ast":null,"code":"import _objectSpread from\"/Users/huborychen/Documents/my-workspace/aick-mmp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import{Layout,Row,Col,Card,Select,Button,Slider,Dropdown,Menu,Badge,Spin,message,Modal}from'antd';import{VideoCameraOutlined,LayoutOutlined,FullscreenOutlined,FullscreenExitOutlined,ReloadOutlined,PlayCircleOutlined,PauseCircleOutlined,ZoomInOutlined,SettingOutlined,MoreOutlined,EyeOutlined}from'@ant-design/icons';import classNames from'classnames';import axios from'axios';import Cookies from'js-cookie';import CameraStream from'../components/CameraStream';import CameraSelector from'../components/CameraSelector';import SplitScreenController from'../components/SplitScreenController';import VideoQualityController from'../components/VideoQualityController';import'./VideoWall.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Option}=Select;const{Content}=Layout;const VideoWall=()=>{var _selectedCameras$edit2;// State management\nconst[layout,setLayout]=useState('4');// 1, 4, 9, 16\nconst[cameras,setCameras]=useState([]);const[selectedCameras,setSelectedCameras]=useState([]);const[loading,setLoading]=useState(true);const[fullscreen,setFullscreen]=useState(false);const[quality,setQuality]=useState('720p');const[bitrate,setBitrate]=useState(2048);const[showCameraSelector,setShowCameraSelector]=useState(false);const[editingCameraIndex,setEditingCameraIndex]=useState(-1);const[cameraStats,setCameraStats]=useState({});const[isRefreshing,setIsRefreshing]=useState(false);const videoWallRef=useRef(null);// Layout configurations\nconst layoutConfigs={'1':{rows:1,cols:1},'4':{rows:2,cols:2},'9':{rows:3,cols:3},'16':{rows:4,cols:4}};// Fetch available cameras\nuseEffect(()=>{fetchCameras();},[]);// Update layout when layout changes or cameras are loaded\nuseEffect(()=>{if(cameras.length>0&&selectedCameras.length===0){// Initialize with first N cameras\nconst initialCameras=cameras.slice(0,parseInt(layout));setSelectedCameras(initialCameras);}else if(selectedCameras.length>parseInt(layout)){// If we have more cameras than layout allows, trim the list\nsetSelectedCameras(selectedCameras.slice(0,parseInt(layout)));}else if(selectedCameras.length<parseInt(layout)&&cameras.length>0){// If we have fewer cameras than layout allows, fill with available cameras\nconst needed=parseInt(layout)-selectedCameras.length;const availableCameras=cameras.filter(cam=>!selectedCameras.some(selected=>selected.id===cam.id));const additional=availableCameras.slice(0,needed);setSelectedCameras([...selectedCameras,...additional]);}},[layout,cameras]);// Handle fullscreen toggle\nuseEffect(()=>{const handleFullscreenChange=()=>{setFullscreen(!!document.fullscreenElement);};document.addEventListener('fullscreenchange',handleFullscreenChange);return()=>{document.removeEventListener('fullscreenchange',handleFullscreenChange);};},[]);// Fetch cameras from API\nconst fetchCameras=async()=>{try{setLoading(true);const token=Cookies.get('token');const response=await axios.get('/api/cameras?status=ONLINE',{headers:{Authorization:\"Bearer \".concat(token)}});setCameras(response.data.content);}catch(error){var _error$response,_error$response$data;message.error('Failed to fetch cameras: '+(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||error.message));}finally{setLoading(false);}};// Refresh camera streams\nconst refreshStreams=async()=>{setIsRefreshing(true);try{// Stop all current streams\nsetSelectedCameras([]);// Wait a moment before restarting\nawait new Promise(resolve=>setTimeout(resolve,1000));// Reload cameras\nawait fetchCameras();message.success('Streams refreshed successfully');}catch(error){message.error('Failed to refresh streams: '+error.message);}finally{setIsRefreshing(false);}};// Change layout handler\nconst handleLayoutChange=value=>{setLayout(value);};// Change camera in a position\nconst handleCameraChange=(index,camera)=>{const newCameras=[...selectedCameras];newCameras[index]=camera;setSelectedCameras(newCameras);setShowCameraSelector(false);setEditingCameraIndex(-1);};// Open camera selector for a specific position\nconst openCameraSelector=index=>{setEditingCameraIndex(index);setShowCameraSelector(true);};// Toggle fullscreen\nconst toggleFullscreen=()=>{if(!document.fullscreenElement){videoWallRef.current.requestFullscreen().catch(err=>{message.error(\"Error attempting to enable fullscreen: \".concat(err.message));});}else{document.exitFullscreen();}};// Update stream quality\nconst handleQualityChange=value=>{setQuality(value);// Map quality to bitrate\nconst qualityToBitrate={'480p':1024,'720p':2048,'1080p':4096};setBitrate(qualityToBitrate[value]);message.info(\"Video quality set to \".concat(value));};// Update bitrate\nconst handleBitrateChange=value=>{setBitrate(value);message.info(\"Video bitrate set to \".concat(value,\" kbps\"));};// Get stream URL for a camera\nconst getStreamUrl=cameraId=>{return\"/api/stream/\".concat(cameraId,\"?quality=\").concat(quality,\"&bitrate=\").concat(bitrate);};// Handle camera status update\nconst handleStatusUpdate=(cameraId,status,stats)=>{setCameraStats(prev=>_objectSpread(_objectSpread({},prev),{},{[cameraId]:stats}));};// Generate grid layout based on selected layout\nconst generateGrid=()=>{const{rows,cols}=layoutConfigs[layout];const grid=[];const totalCells=parseInt(layout);for(let i=0;i<rows;i++){const row=[];for(let j=0;j<cols;j++){var _selectedCameras$inde,_cameraStats$selected,_selectedCameras$inde2,_selectedCameras$inde3,_selectedCameras$inde4,_selectedCameras$inde6,_cameraStats$selected2,_selectedCameras$inde7,_cameraStats$selected3,_selectedCameras$inde8,_cameraStats$selected4,_selectedCameras$inde9;const index=i*cols+j;row.push(/*#__PURE__*/_jsx(Col,{span:24/cols,children:/*#__PURE__*/_jsx(\"div\",{className:\"video-cell\",children:selectedCameras[index]?/*#__PURE__*/_jsxs(Card,{className:\"video-card\",bordered:false,bodyStyle:{padding:0,height:'100%',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"video-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"camera-name\",children:[/*#__PURE__*/_jsx(VideoCameraOutlined,{className:\"camera-icon\"}),(_selectedCameras$inde=selectedCameras[index])===null||_selectedCameras$inde===void 0?void 0:_selectedCameras$inde.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"camera-controls\",children:[/*#__PURE__*/_jsx(Badge,{status:((_cameraStats$selected=cameraStats[(_selectedCameras$inde2=selectedCameras[index])===null||_selectedCameras$inde2===void 0?void 0:_selectedCameras$inde2.id])===null||_cameraStats$selected===void 0?void 0:_cameraStats$selected.status)==='active'?'success':'error'}),/*#__PURE__*/_jsx(Dropdown,{overlay:/*#__PURE__*/_jsxs(Menu,{children:[/*#__PURE__*/_jsx(Menu.Item,{onClick:()=>openCameraSelector(index),children:\"Replace Camera\"},\"replace\"),/*#__PURE__*/_jsx(Menu.Item,{children:\"Fullscreen\"},\"fullscreen\"),/*#__PURE__*/_jsx(Menu.Item,{children:\"Start Recording\"},\"record\"),/*#__PURE__*/_jsx(Menu.Item,{children:\"Camera Settings\"},\"settings\")]}),children:/*#__PURE__*/_jsx(Button,{type:\"text\",size:\"small\",icon:/*#__PURE__*/_jsx(MoreOutlined,{})})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"video-container\",children:/*#__PURE__*/_jsx(CameraStream,{cameraId:(_selectedCameras$inde3=selectedCameras[index])===null||_selectedCameras$inde3===void 0?void 0:_selectedCameras$inde3.id,streamUrl:getStreamUrl((_selectedCameras$inde4=selectedCameras[index])===null||_selectedCameras$inde4===void 0?void 0:_selectedCameras$inde4.id),onStatusUpdate:(status,stats)=>{var _selectedCameras$inde5;return handleStatusUpdate((_selectedCameras$inde5=selectedCameras[index])===null||_selectedCameras$inde5===void 0?void 0:_selectedCameras$inde5.id,status,stats);},quality:quality,bitrate:bitrate})}),/*#__PURE__*/_jsxs(\"div\",{className:\"video-footer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"camera-location\",children:(_selectedCameras$inde6=selectedCameras[index])===null||_selectedCameras$inde6===void 0?void 0:_selectedCameras$inde6.location}),/*#__PURE__*/_jsxs(\"div\",{className:\"camera-stats\",children:[((_cameraStats$selected2=cameraStats[(_selectedCameras$inde7=selectedCameras[index])===null||_selectedCameras$inde7===void 0?void 0:_selectedCameras$inde7.id])===null||_cameraStats$selected2===void 0?void 0:_cameraStats$selected2.resolution)||quality,\" |\",((_cameraStats$selected3=cameraStats[(_selectedCameras$inde8=selectedCameras[index])===null||_selectedCameras$inde8===void 0?void 0:_selectedCameras$inde8.id])===null||_cameraStats$selected3===void 0?void 0:_cameraStats$selected3.fps)||'0',\" FPS |\",Math.round((((_cameraStats$selected4=cameraStats[(_selectedCameras$inde9=selectedCameras[index])===null||_selectedCameras$inde9===void 0?void 0:_selectedCameras$inde9.id])===null||_cameraStats$selected4===void 0?void 0:_cameraStats$selected4.bitrate)||bitrate)/1024),\" Mbps\"]})]})]}):/*#__PURE__*/_jsx(Card,{className:\"empty-video-card\",bordered:false,bodyStyle:{padding:0,height:'100%',display:'flex',alignItems:'center',justifyContent:'center'},onClick:()=>openCameraSelector(index),children:/*#__PURE__*/_jsxs(\"div\",{className:\"empty-video-placeholder\",children:[/*#__PURE__*/_jsx(VideoCameraOutlined,{className:\"empty-icon\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click to select camera\"})]})})})},\"\".concat(i,\"-\").concat(j)));}grid.push(/*#__PURE__*/_jsx(Row,{gutter:[8,8],style:{height:\"\".concat(100/rows,\"%\")},children:row},i));}return grid;};return/*#__PURE__*/_jsxs(\"div\",{ref:videoWallRef,className:classNames('video-wall-container',{'fullscreen':fullscreen}),children:[/*#__PURE__*/_jsx(Layout,{style:{height:'100%'},children:/*#__PURE__*/_jsxs(Content,{style:{padding:'16px',height:'calc(100% - 64px)'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"video-wall-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[/*#__PURE__*/_jsx(VideoCameraOutlined,{}),\" Video Wall\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"layout-control\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"control-label\",children:\"Layout:\"}),/*#__PURE__*/_jsxs(Select,{value:layout,onChange:handleLayoutChange,size:\"small\",style:{width:100,marginLeft:8},children:[/*#__PURE__*/_jsx(Option,{value:\"1\",children:\"1 Screen\"}),/*#__PURE__*/_jsx(Option,{value:\"4\",children:\"4 Screens\"}),/*#__PURE__*/_jsx(Option,{value:\"9\",children:\"9 Screens\"}),/*#__PURE__*/_jsx(Option,{value:\"16\",children:\"16 Screens\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quality-control\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"control-label\",children:\"Quality:\"}),/*#__PURE__*/_jsxs(Select,{value:quality,onChange:handleQualityChange,size:\"small\",style:{width:100,marginLeft:8},children:[/*#__PURE__*/_jsx(Option,{value:\"480p\",children:\"480p\"}),/*#__PURE__*/_jsx(Option,{value:\"720p\",children:\"720p\"}),/*#__PURE__*/_jsx(Option,{value:\"1080p\",children:\"1080p\"})]})]}),/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(ReloadOutlined,{spin:isRefreshing}),size:\"small\",onClick:refreshStreams,disabled:isRefreshing,className:\"control-button\",children:\"Refresh\"}),/*#__PURE__*/_jsx(Button,{icon:fullscreen?/*#__PURE__*/_jsx(FullscreenExitOutlined,{}):/*#__PURE__*/_jsx(FullscreenOutlined,{}),size:\"small\",onClick:toggleFullscreen,className:\"control-button\",children:fullscreen?'Exit Fullscreen':'Fullscreen'})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"video-wall-content\",style:{height:'calc(100% - 60px)'},children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-container\",children:/*#__PURE__*/_jsx(Spin,{size:\"large\",tip:\"Loading cameras...\"})}):/*#__PURE__*/_jsx(Layout,{style:{height:'100%'},children:/*#__PURE__*/_jsx(Content,{style:{height:'100%',padding:0,overflow:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{className:\"video-grid\",style:{height:'100%'},children:generateGrid()})})})})]})}),/*#__PURE__*/_jsx(Modal,{title:\"Select Camera\",open:showCameraSelector,onCancel:()=>{setShowCameraSelector(false);setEditingCameraIndex(-1);},footer:null,width:800,destroyOnClose:true,children:/*#__PURE__*/_jsx(CameraSelector,{cameras:cameras.filter(cam=>{var _selectedCameras$edit;return!selectedCameras.some(selected=>selected.id===cam.id)||((_selectedCameras$edit=selectedCameras[editingCameraIndex])===null||_selectedCameras$edit===void 0?void 0:_selectedCameras$edit.id)===cam.id;}),onSelect:camera=>handleCameraChange(editingCameraIndex,camera),selectedCameraId:(_selectedCameras$edit2=selectedCameras[editingCameraIndex])===null||_selectedCameras$edit2===void 0?void 0:_selectedCameras$edit2.id})})]});};export default VideoWall;","map":{"version":3,"names":["React","useState","useEffect","useRef","Layout","Row","Col","Card","Select","Button","Slider","Dropdown","Menu","Badge","Spin","message","Modal","VideoCameraOutlined","LayoutOutlined","FullscreenOutlined","FullscreenExitOutlined","ReloadOutlined","PlayCircleOutlined","PauseCircleOutlined","ZoomInOutlined","SettingOutlined","MoreOutlined","EyeOutlined","classNames","axios","Cookies","CameraStream","CameraSelector","SplitScreenController","VideoQualityController","jsx","_jsx","jsxs","_jsxs","Option","Content","VideoWall","_selectedCameras$edit2","layout","setLayout","cameras","setCameras","selectedCameras","setSelectedCameras","loading","setLoading","fullscreen","setFullscreen","quality","setQuality","bitrate","setBitrate","showCameraSelector","setShowCameraSelector","editingCameraIndex","setEditingCameraIndex","cameraStats","setCameraStats","isRefreshing","setIsRefreshing","videoWallRef","layoutConfigs","rows","cols","fetchCameras","length","initialCameras","slice","parseInt","needed","availableCameras","filter","cam","some","selected","id","additional","handleFullscreenChange","document","fullscreenElement","addEventListener","removeEventListener","token","get","response","headers","Authorization","concat","data","content","error","_error$response","_error$response$data","refreshStreams","Promise","resolve","setTimeout","success","handleLayoutChange","value","handleCameraChange","index","camera","newCameras","openCameraSelector","toggleFullscreen","current","requestFullscreen","catch","err","exitFullscreen","handleQualityChange","qualityToBitrate","info","handleBitrateChange","getStreamUrl","cameraId","handleStatusUpdate","status","stats","prev","_objectSpread","generateGrid","grid","totalCells","i","row","j","_selectedCameras$inde","_cameraStats$selected","_selectedCameras$inde2","_selectedCameras$inde3","_selectedCameras$inde4","_selectedCameras$inde6","_cameraStats$selected2","_selectedCameras$inde7","_cameraStats$selected3","_selectedCameras$inde8","_cameraStats$selected4","_selectedCameras$inde9","push","span","children","className","bordered","bodyStyle","padding","height","display","flexDirection","name","overlay","Item","onClick","type","size","icon","streamUrl","onStatusUpdate","_selectedCameras$inde5","location","resolution","fps","Math","round","alignItems","justifyContent","gutter","style","ref","onChange","width","marginLeft","spin","disabled","tip","overflow","title","open","onCancel","footer","destroyOnClose","_selectedCameras$edit","onSelect","selectedCameraId"],"sources":["/Users/huborychen/Documents/my-workspace/aick-mmp/frontend/src/pages/VideoWall.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Layout, Row, Col, Card, Select, Button, Slider, Dropdown, Menu, Badge, Spin, message, Modal } from 'antd';\nimport {\n  VideoCameraOutlined,\n  LayoutOutlined,\n  FullscreenOutlined,\n  FullscreenExitOutlined,\n  ReloadOutlined,\n  PlayCircleOutlined,\n  PauseCircleOutlined,\n  ZoomInOutlined,\n  SettingOutlined,\n  MoreOutlined,\n  EyeOutlined\n} from '@ant-design/icons';\nimport classNames from 'classnames';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport CameraStream from '../components/CameraStream';\nimport CameraSelector from '../components/CameraSelector';\nimport SplitScreenController from '../components/SplitScreenController';\nimport VideoQualityController from '../components/VideoQualityController';\nimport './VideoWall.css';\n\nconst { Option } = Select;\nconst { Content } = Layout;\n\nconst VideoWall = () => {\n  // State management\n  const [layout, setLayout] = useState('4'); // 1, 4, 9, 16\n  const [cameras, setCameras] = useState([]);\n  const [selectedCameras, setSelectedCameras] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [fullscreen, setFullscreen] = useState(false);\n  const [quality, setQuality] = useState('720p');\n  const [bitrate, setBitrate] = useState(2048);\n  const [showCameraSelector, setShowCameraSelector] = useState(false);\n  const [editingCameraIndex, setEditingCameraIndex] = useState(-1);\n  const [cameraStats, setCameraStats] = useState({});\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  const videoWallRef = useRef(null);\n\n  // Layout configurations\n  const layoutConfigs = {\n    '1': { rows: 1, cols: 1 },\n    '4': { rows: 2, cols: 2 },\n    '9': { rows: 3, cols: 3 },\n    '16': { rows: 4, cols: 4 }\n  };\n\n  // Fetch available cameras\n  useEffect(() => {\n    fetchCameras();\n  }, []);\n\n  // Update layout when layout changes or cameras are loaded\n  useEffect(() => {\n    if (cameras.length > 0 && selectedCameras.length === 0) {\n      // Initialize with first N cameras\n      const initialCameras = cameras.slice(0, parseInt(layout));\n      setSelectedCameras(initialCameras);\n    } else if (selectedCameras.length > parseInt(layout)) {\n      // If we have more cameras than layout allows, trim the list\n      setSelectedCameras(selectedCameras.slice(0, parseInt(layout)));\n    } else if (selectedCameras.length < parseInt(layout) && cameras.length > 0) {\n      // If we have fewer cameras than layout allows, fill with available cameras\n      const needed = parseInt(layout) - selectedCameras.length;\n      const availableCameras = cameras.filter(cam => \n        !selectedCameras.some(selected => selected.id === cam.id)\n      );\n      const additional = availableCameras.slice(0, needed);\n      setSelectedCameras([...selectedCameras, ...additional]);\n    }\n  }, [layout, cameras]);\n\n  // Handle fullscreen toggle\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setFullscreen(!!document.fullscreenElement);\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  // Fetch cameras from API\n  const fetchCameras = async () => {\n    try {\n      setLoading(true);\n      const token = Cookies.get('token');\n      const response = await axios.get('/api/cameras?status=ONLINE', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      setCameras(response.data.content);\n    } catch (error) {\n      message.error('Failed to fetch cameras: ' + (error.response?.data?.message || error.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Refresh camera streams\n  const refreshStreams = async () => {\n    setIsRefreshing(true);\n    try {\n      // Stop all current streams\n      setSelectedCameras([]);\n      // Wait a moment before restarting\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      // Reload cameras\n      await fetchCameras();\n      message.success('Streams refreshed successfully');\n    } catch (error) {\n      message.error('Failed to refresh streams: ' + error.message);\n    } finally {\n      setIsRefreshing(false);\n    }\n  };\n\n  // Change layout handler\n  const handleLayoutChange = (value) => {\n    setLayout(value);\n  };\n\n  // Change camera in a position\n  const handleCameraChange = (index, camera) => {\n    const newCameras = [...selectedCameras];\n    newCameras[index] = camera;\n    setSelectedCameras(newCameras);\n    setShowCameraSelector(false);\n    setEditingCameraIndex(-1);\n  };\n\n  // Open camera selector for a specific position\n  const openCameraSelector = (index) => {\n    setEditingCameraIndex(index);\n    setShowCameraSelector(true);\n  };\n\n  // Toggle fullscreen\n  const toggleFullscreen = () => {\n    if (!document.fullscreenElement) {\n      videoWallRef.current.requestFullscreen().catch(err => {\n        message.error(`Error attempting to enable fullscreen: ${err.message}`);\n      });\n    } else {\n      document.exitFullscreen();\n    }\n  };\n\n  // Update stream quality\n  const handleQualityChange = (value) => {\n    setQuality(value);\n    // Map quality to bitrate\n    const qualityToBitrate = {\n      '480p': 1024,\n      '720p': 2048,\n      '1080p': 4096\n    };\n    setBitrate(qualityToBitrate[value]);\n    message.info(`Video quality set to ${value}`);\n  };\n\n  // Update bitrate\n  const handleBitrateChange = (value) => {\n    setBitrate(value);\n    message.info(`Video bitrate set to ${value} kbps`);\n  };\n\n  // Get stream URL for a camera\n  const getStreamUrl = (cameraId) => {\n    return `/api/stream/${cameraId}?quality=${quality}&bitrate=${bitrate}`;\n  };\n\n  // Handle camera status update\n  const handleStatusUpdate = (cameraId, status, stats) => {\n    setCameraStats(prev => ({\n      ...prev,\n      [cameraId]: stats\n    }));\n  };\n\n  // Generate grid layout based on selected layout\n  const generateGrid = () => {\n    const { rows, cols } = layoutConfigs[layout];\n    const grid = [];\n    const totalCells = parseInt(layout);\n\n    for (let i = 0; i < rows; i++) {\n      const row = [];\n      for (let j = 0; j < cols; j++) {\n        const index = i * cols + j;\n        row.push(\n          <Col key={`${i}-${j}`} span={24 / cols}>\n            <div className=\"video-cell\">\n              {selectedCameras[index] ? (\n                <Card\n                  className=\"video-card\"\n                  bordered={false}\n                  bodyStyle={{ padding: 0, height: '100%', display: 'flex', flexDirection: 'column' }}\n                >\n                  <div className=\"video-header\">\n                    <div className=\"camera-name\">\n                      <VideoCameraOutlined className=\"camera-icon\" />\n                      {selectedCameras[index]?.name}\n                    </div>\n                    <div className=\"camera-controls\">\n                      <Badge status={cameraStats[selectedCameras[index]?.id]?.status === 'active' ? 'success' : 'error'} />\n                      <Dropdown\n                        overlay={(\n                          <Menu>\n                            <Menu.Item key=\"replace\"\n                              onClick={() => openCameraSelector(index)}>\n                              Replace Camera\n                            </Menu.Item>\n                            <Menu.Item key=\"fullscreen\">\n                              Fullscreen\n                            </Menu.Item>\n                            <Menu.Item key=\"record\">\n                              Start Recording\n                            </Menu.Item>\n                            <Menu.Item key=\"settings\">\n                              Camera Settings\n                            </Menu.Item>\n                          </Menu>\n                        )}\n                      >\n                        <Button type=\"text\" size=\"small\" icon={<MoreOutlined />} />\n                      </Dropdown>\n                    </div>\n                  </div>\n                  <div className=\"video-container\">\n                    <CameraStream\n                      cameraId={selectedCameras[index]?.id}\n                      streamUrl={getStreamUrl(selectedCameras[index]?.id)}\n                      onStatusUpdate={(status, stats) => handleStatusUpdate(selectedCameras[index]?.id, status, stats)}\n                      quality={quality}\n                      bitrate={bitrate}\n                    />\n                  </div>\n                  <div className=\"video-footer\">\n                    <div className=\"camera-location\">{selectedCameras[index]?.location}</div>\n                    <div className=\"camera-stats\">\n                      {cameraStats[selectedCameras[index]?.id]?.resolution || quality} | \n                      {cameraStats[selectedCameras[index]?.id]?.fps || '0'} FPS | \n                      {Math.round((cameraStats[selectedCameras[index]?.id]?.bitrate || bitrate) / 1024)} Mbps\n                    </div>\n                  </div>\n                </Card>\n              ) : (\n                <Card\n                  className=\"empty-video-card\"\n                  bordered={false}\n                  bodyStyle={{ padding: 0, height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                  onClick={() => openCameraSelector(index)}\n                >\n                  <div className=\"empty-video-placeholder\">\n                    <VideoCameraOutlined className=\"empty-icon\" />\n                    <p>Click to select camera</p>\n                  </div>\n                </Card>\n              )}\n            </div>\n          </Col>\n        );\n      }\n      grid.push(<Row key={i} gutter={[8, 8]} style={{ height: `${100 / rows}%` }}>{row}</Row>);\n    }\n    return grid;\n  };\n\n  return (\n    <div ref={videoWallRef} className={classNames('video-wall-container', { 'fullscreen': fullscreen })}>\n      <Layout style={{ height: '100%' }}>\n        <Content style={{ padding: '16px', height: 'calc(100% - 64px)' }}>\n          <div className=\"video-wall-header\">\n            <div className=\"title\">\n              <VideoCameraOutlined /> Video Wall\n            </div>\n            <div className=\"controls\">\n              <div className=\"layout-control\">\n                <span className=\"control-label\">Layout:</span>\n                <Select\n                  value={layout}\n                  onChange={handleLayoutChange}\n                  size=\"small\"\n                  style={{ width: 100, marginLeft: 8 }}\n                >\n                  <Option value=\"1\">1 Screen</Option>\n                  <Option value=\"4\">4 Screens</Option>\n                  <Option value=\"9\">9 Screens</Option>\n                  <Option value=\"16\">16 Screens</Option>\n                </Select>\n              </div>\n\n              <div className=\"quality-control\">\n                <span className=\"control-label\">Quality:</span>\n                <Select\n                  value={quality}\n                  onChange={handleQualityChange}\n                  size=\"small\"\n                  style={{ width: 100, marginLeft: 8 }}\n                >\n                  <Option value=\"480p\">480p</Option>\n                  <Option value=\"720p\">720p</Option>\n                  <Option value=\"1080p\">1080p</Option>\n                </Select>\n              </div>\n\n              <Button\n                icon={<ReloadOutlined spin={isRefreshing} />}\n                size=\"small\"\n                onClick={refreshStreams}\n                disabled={isRefreshing}\n                className=\"control-button\"\n              >\n                Refresh\n              </Button>\n\n              <Button\n                icon={fullscreen ? <FullscreenExitOutlined /> : <FullscreenOutlined />}\n                size=\"small\"\n                onClick={toggleFullscreen}\n                className=\"control-button\"\n              >\n                {fullscreen ? 'Exit Fullscreen' : 'Fullscreen'}\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"video-wall-content\" style={{ height: 'calc(100% - 60px)' }}>\n            {loading ? (\n              <div className=\"loading-container\">\n                <Spin size=\"large\" tip=\"Loading cameras...\" />\n              </div>\n            ) : (\n              <Layout style={{ height: '100%' }}>\n                <Content style={{ height: '100%', padding: 0, overflow: 'hidden' }}>\n                  <div className=\"video-grid\" style={{ height: '100%' }}>\n                    {generateGrid()}\n                  </div>\n                </Content>\n              </Layout>\n            )}\n          </div>\n        </Content>\n      </Layout>\n\n      {/* Camera Selector Modal */}\n      <Modal\n        title=\"Select Camera\"\n        open={showCameraSelector}\n        onCancel={() => {\n          setShowCameraSelector(false);\n          setEditingCameraIndex(-1);\n        }}\n        footer={null}\n        width={800}\n        destroyOnClose\n      >\n        <CameraSelector\n          cameras={cameras.filter(cam => \n            !selectedCameras.some(selected => selected.id === cam.id) || \n            selectedCameras[editingCameraIndex]?.id === cam.id\n          )}\n          onSelect={(camera) => handleCameraChange(editingCameraIndex, camera)}\n          selectedCameraId={selectedCameras[editingCameraIndex]?.id}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default VideoWall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}